/**
 * iStreamPlanet Channels API
 * This API provides a way to list, create, and run channels.  Channels consist of inputs (ingest), transcoding settings like codecs and bitrates, and outputs (publishing).  List calls use cursor-based pagination with [RFC 5988](https://tools.ietf.org/html/rfc5988) Link headers. Clients *should* read this header and follow the next link to read all pages of results. 
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: support@istreamplanet.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChannelPackagingContentProtection from './ChannelPackagingContentProtection';
import ChannelPackagingMp2t from './ChannelPackagingMp2t';
import ChannelPackagingMp4 from './ChannelPackagingMp4';

/**
 * The ChannelPackagingPackagers model module.
 * @module model/ChannelPackagingPackagers
 * @version 0.0.0
 */
class ChannelPackagingPackagers {
    /**
     * Constructs a new <code>ChannelPackagingPackagers</code>.
     * @alias module:model/ChannelPackagingPackagers
     */
    constructor() { 
        
        ChannelPackagingPackagers.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChannelPackagingPackagers</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChannelPackagingPackagers} obj Optional instance to populate.
     * @return {module:model/ChannelPackagingPackagers} The populated <code>ChannelPackagingPackagers</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChannelPackagingPackagers();

            if (data.hasOwnProperty('content_protection')) {
                obj['content_protection'] = ChannelPackagingContentProtection.constructFromObject(data['content_protection']);
            }
            if (data.hasOwnProperty('mp2t')) {
                obj['mp2t'] = ChannelPackagingMp2t.constructFromObject(data['mp2t']);
            }
            if (data.hasOwnProperty('mp4')) {
                obj['mp4'] = ChannelPackagingMp4.constructFromObject(data['mp4']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/ChannelPackagingContentProtection} content_protection
 */
ChannelPackagingPackagers.prototype['content_protection'] = undefined;

/**
 * @member {module:model/ChannelPackagingMp2t} mp2t
 */
ChannelPackagingPackagers.prototype['mp2t'] = undefined;

/**
 * @member {module:model/ChannelPackagingMp4} mp4
 */
ChannelPackagingPackagers.prototype['mp4'] = undefined;






export default ChannelPackagingPackagers;

