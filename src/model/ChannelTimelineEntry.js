/**
 * iStreamPlanet Channels API
 * This API provides a way to list, create, and run channels.  Channels consist of inputs (ingest), transcoding settings like codecs and bitrates, and outputs (publishing).  List calls use cursor-based pagination with [RFC 5988](https://tools.ietf.org/html/rfc5988) Link headers. Clients *should* read this header and follow the next link to read all pages of results. 
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: support@istreamplanet.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ChannelTimelineEntry model module.
 * @module model/ChannelTimelineEntry
 * @version 0.0.0
 */
class ChannelTimelineEntry {
    /**
     * Constructs a new <code>ChannelTimelineEntry</code>.
     * @alias module:model/ChannelTimelineEntry
     * @param action {String} Shortcode indicating what action was taken
     * @param agent {String} Agent responsible for the action taken
     * @param requestBody {String} The request body, if any, of the original action
     * @param statusCode {Number} HTTP Status code indicating outcome of the action.
     * @param timestamp {Date} Timestamp of the action in UTC
     * @param traceId {String} Correlation identifier for tracing
     */
    constructor(action, agent, requestBody, statusCode, timestamp, traceId) { 
        
        ChannelTimelineEntry.initialize(this, action, agent, requestBody, statusCode, timestamp, traceId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, action, agent, requestBody, statusCode, timestamp, traceId) { 
        obj['action'] = action;
        obj['agent'] = agent;
        obj['request_body'] = requestBody;
        obj['status_code'] = statusCode;
        obj['timestamp'] = timestamp;
        obj['trace_id'] = traceId;
    }

    /**
     * Constructs a <code>ChannelTimelineEntry</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChannelTimelineEntry} obj Optional instance to populate.
     * @return {module:model/ChannelTimelineEntry} The populated <code>ChannelTimelineEntry</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChannelTimelineEntry();

            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('agent')) {
                obj['agent'] = ApiClient.convertToType(data['agent'], 'String');
            }
            if (data.hasOwnProperty('request_body')) {
                obj['request_body'] = ApiClient.convertToType(data['request_body'], 'String');
            }
            if (data.hasOwnProperty('status_code')) {
                obj['status_code'] = ApiClient.convertToType(data['status_code'], 'Number');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Date');
            }
            if (data.hasOwnProperty('trace_id')) {
                obj['trace_id'] = ApiClient.convertToType(data['trace_id'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Shortcode indicating what action was taken
 * @member {String} action
 */
ChannelTimelineEntry.prototype['action'] = undefined;

/**
 * Agent responsible for the action taken
 * @member {String} agent
 */
ChannelTimelineEntry.prototype['agent'] = undefined;

/**
 * The request body, if any, of the original action
 * @member {String} request_body
 */
ChannelTimelineEntry.prototype['request_body'] = undefined;

/**
 * HTTP Status code indicating outcome of the action.
 * @member {Number} status_code
 */
ChannelTimelineEntry.prototype['status_code'] = undefined;

/**
 * Timestamp of the action in UTC
 * @member {Date} timestamp
 */
ChannelTimelineEntry.prototype['timestamp'] = undefined;

/**
 * Correlation identifier for tracing
 * @member {String} trace_id
 */
ChannelTimelineEntry.prototype['trace_id'] = undefined;






export default ChannelTimelineEntry;

