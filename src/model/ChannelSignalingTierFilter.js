/**
 * iStreamPlanet Channels API
 * This API provides a way to list, create, and run channels.  Channels consist of inputs (ingest), transcoding settings like codecs and bitrates, and outputs (publishing).  List calls use cursor-based pagination with [RFC 5988](https://tools.ietf.org/html/rfc5988) Link headers. Clients *should* read this header and follow the next link to read all pages of results. 
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: support@istreamplanet.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChannelSignalingTierFilterExplicitTier from './ChannelSignalingTierFilterExplicitTier';

/**
 * The ChannelSignalingTierFilter model module.
 * @module model/ChannelSignalingTierFilter
 * @version 0.0.0
 */
class ChannelSignalingTierFilter {
    /**
     * Constructs a new <code>ChannelSignalingTierFilter</code>.
     * Specifies how to filter the provided segments, when received through in-band SCTE-35, based on the SCTE-35 SpliceInfoSection Tier.
     * @alias module:model/ChannelSignalingTierFilter
     */
    constructor() { 
        
        ChannelSignalingTierFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChannelSignalingTierFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChannelSignalingTierFilter} obj Optional instance to populate.
     * @return {module:model/ChannelSignalingTierFilter} The populated <code>ChannelSignalingTierFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChannelSignalingTierFilter();

            if (data.hasOwnProperty('explicit_tier')) {
                obj['explicit_tier'] = ChannelSignalingTierFilterExplicitTier.constructFromObject(data['explicit_tier']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/ChannelSignalingTierFilterExplicitTier} explicit_tier
 */
ChannelSignalingTierFilter.prototype['explicit_tier'] = undefined;






export default ChannelSignalingTierFilter;

