/**
 * iStreamPlanet Channels API
 * This API provides a way to list, create, and run channels.  Channels consist of inputs (ingest), transcoding settings like codecs and bitrates, and outputs (publishing).  List calls use cursor-based pagination with [RFC 5988](https://tools.ietf.org/html/rfc5988) Link headers. Clients *should* read this header and follow the next link to read all pages of results. 
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: support@istreamplanet.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ChannelPackagingMp4 model module.
 * @module model/ChannelPackagingMp4
 * @version 0.0.0
 */
class ChannelPackagingMp4 {
    /**
     * Constructs a new <code>ChannelPackagingMp4</code>.
     * Uses MP4 format for each segments. Only one of [&#39;mp2t&#39;, &#39;mp4&#39;] may be set.
     * @alias module:model/ChannelPackagingMp4
     */
    constructor() { 
        
        ChannelPackagingMp4.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChannelPackagingMp4</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChannelPackagingMp4} obj Optional instance to populate.
     * @return {module:model/ChannelPackagingMp4} The populated <code>ChannelPackagingMp4</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChannelPackagingMp4();

            if (data.hasOwnProperty('caption_placement')) {
                obj['caption_placement'] = ApiClient.convertToType(data['caption_placement'], 'String');
            }
            if (data.hasOwnProperty('insert_pssh_box')) {
                obj['insert_pssh_box'] = ApiClient.convertToType(data['insert_pssh_box'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * CaptionPlacement defines where caption messages should be placed in the output MP4.
 * @member {module:model/ChannelPackagingMp4.CaptionPlacementEnum} caption_placement
 */
ChannelPackagingMp4.prototype['caption_placement'] = undefined;

/**
 * Insert pssh boxes generated by content protection into packaged segments. Defaults to not insert pssh boxes to the packaged segments.
 * @member {Boolean} insert_pssh_box
 */
ChannelPackagingMp4.prototype['insert_pssh_box'] = undefined;





/**
 * Allowed values for the <code>caption_placement</code> property.
 * @enum {String}
 * @readonly
 */
ChannelPackagingMp4['CaptionPlacementEnum'] = {

    /**
     * value: "SEI_PAYLOAD"
     * @const
     */
    "SEI_PAYLOAD": "SEI_PAYLOAD",

    /**
     * value: "CLCP_TRACK"
     * @const
     */
    "CLCP_TRACK": "CLCP_TRACK"
};



export default ChannelPackagingMp4;

