/**
 * iStreamPlanet Channels API
 * This API provides a way to list, create, and run channels.  Channels consist of inputs (ingest), transcoding settings like codecs and bitrates, and outputs (publishing).  List calls use cursor-based pagination with [RFC 5988](https://tools.ietf.org/html/rfc5988) Link headers. Clients *should* read this header and follow the next link to read all pages of results. 
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: support@istreamplanet.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ChannelPackagingContentProtectionCommon model module.
 * @module model/ChannelPackagingContentProtectionCommon
 * @version 0.0.0
 */
class ChannelPackagingContentProtectionCommon {
    /**
     * Constructs a new <code>ChannelPackagingContentProtectionCommon</code>.
     * Only one of [&#39;bulk_file&#39;, &#39;sample_aes&#39;, &#39;common&#39;] may be set.
     * @alias module:model/ChannelPackagingContentProtectionCommon
     */
    constructor() { 
        
        ChannelPackagingContentProtectionCommon.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChannelPackagingContentProtectionCommon</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChannelPackagingContentProtectionCommon} obj Optional instance to populate.
     * @return {module:model/ChannelPackagingContentProtectionCommon} The populated <code>ChannelPackagingContentProtectionCommon</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChannelPackagingContentProtectionCommon();

            if (data.hasOwnProperty('scheme_type')) {
                obj['scheme_type'] = ApiClient.convertToType(data['scheme_type'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Defines the scheme that can be used with Common Encryption
 * @member {module:model/ChannelPackagingContentProtectionCommon.SchemeTypeEnum} scheme_type
 */
ChannelPackagingContentProtectionCommon.prototype['scheme_type'] = undefined;





/**
 * Allowed values for the <code>scheme_type</code> property.
 * @enum {String}
 * @readonly
 */
ChannelPackagingContentProtectionCommon['SchemeTypeEnum'] = {

    /**
     * value: "CENC"
     * @const
     */
    "CENC": "CENC",

    /**
     * value: "CBCS"
     * @const
     */
    "CBCS": "CBCS"
};



export default ChannelPackagingContentProtectionCommon;

