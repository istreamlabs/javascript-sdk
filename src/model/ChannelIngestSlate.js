/**
 * iStreamPlanet Channels API
 * This API provides a way to list, create, and run channels.  Channels consist of inputs (ingest), transcoding settings like codecs and bitrates, and outputs (publishing).  List calls use cursor-based pagination with [RFC 5988](https://tools.ietf.org/html/rfc5988) Link headers. Clients *should* read this header and follow the next link to read all pages of results. 
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: support@istreamplanet.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ChannelIngestSlate model module.
 * @module model/ChannelIngestSlate
 * @version 0.0.0
 */
class ChannelIngestSlate {
    /**
     * Constructs a new <code>ChannelIngestSlate</code>.
     * Slate configures default slating behavior.
     * @alias module:model/ChannelIngestSlate
     */
    constructor() { 
        
        ChannelIngestSlate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChannelIngestSlate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChannelIngestSlate} obj Optional instance to populate.
     * @return {module:model/ChannelIngestSlate} The populated <code>ChannelIngestSlate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChannelIngestSlate();

            if (data.hasOwnProperty('source_loss_url')) {
                obj['source_loss_url'] = ApiClient.convertToType(data['source_loss_url'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Source loss URL defines the location of the TS file to play when no source is available. It must have one audio and one video stream. Either MPEG2 or H.264 can be used.
 * @member {String} source_loss_url
 */
ChannelIngestSlate.prototype['source_loss_url'] = undefined;






export default ChannelIngestSlate;

