/**
 * iStreamPlanet Channels API
 * This API provides a way to list, create, and run channels.  Channels consist of inputs (ingest), transcoding settings like codecs and bitrates, and outputs (publishing).  List calls use cursor-based pagination with [RFC 5988](https://tools.ietf.org/html/rfc5988) Link headers. Clients *should* read this header and follow the next link to read all pages of results. 
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: support@istreamplanet.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChannelPublishingClosedCaptionStreams from './ChannelPublishingClosedCaptionStreams';
import ChannelPublishingLive2vod from './ChannelPublishingLive2vod';
import ChannelPublishingPublications from './ChannelPublishingPublications';

/**
 * The ChannelPublishing model module.
 * @module model/ChannelPublishing
 * @version 0.0.0
 */
class ChannelPublishing {
    /**
     * Constructs a new <code>ChannelPublishing</code>.
     * Publishing configures playlist formats and where to send video and playlist data.
     * @alias module:model/ChannelPublishing
     */
    constructor() { 
        
        ChannelPublishing.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChannelPublishing</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChannelPublishing} obj Optional instance to populate.
     * @return {module:model/ChannelPublishing} The populated <code>ChannelPublishing</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChannelPublishing();

            if (data.hasOwnProperty('closed_caption_streams')) {
                obj['closed_caption_streams'] = ApiClient.convertToType(data['closed_caption_streams'], [ChannelPublishingClosedCaptionStreams]);
            }
            if (data.hasOwnProperty('feature_flags')) {
                obj['feature_flags'] = ApiClient.convertToType(data['feature_flags'], ['String']);
            }
            if (data.hasOwnProperty('live2vod')) {
                obj['live2vod'] = ChannelPublishingLive2vod.constructFromObject(data['live2vod']);
            }
            if (data.hasOwnProperty('publications')) {
                obj['publications'] = ApiClient.convertToType(data['publications'], [ChannelPublishingPublications]);
            }
        }
        return obj;
    }


}

/**
 * Configures how captioning information is published.
 * @member {Array.<module:model/ChannelPublishingClosedCaptionStreams>} closed_caption_streams
 */
ChannelPublishing.prototype['closed_caption_streams'] = undefined;

/**
 * Set of string identifiers corresponding to features that this Channel is opting in.
 * @member {Array.<String>} feature_flags
 */
ChannelPublishing.prototype['feature_flags'] = undefined;

/**
 * @member {module:model/ChannelPublishingLive2vod} live2vod
 */
ChannelPublishing.prototype['live2vod'] = undefined;

/**
 * A set of individual configurations that each can configure a specific destination and mechanism of delivery for segments and/or playlists.
 * @member {Array.<module:model/ChannelPublishingPublications>} publications
 */
ChannelPublishing.prototype['publications'] = undefined;






export default ChannelPublishing;

