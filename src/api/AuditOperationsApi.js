/**
 * iStreamPlanet Channels API
 * This API provides a way to list, create, and run channels.  Channels consist of inputs (ingest), transcoding settings like codecs and bitrates, and outputs (publishing).  List calls use cursor-based pagination with [RFC 5988](https://tools.ietf.org/html/rfc5988) Link headers. Clients *should* read this header and follow the next link to read all pages of results. 
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: support@istreamplanet.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ChannelTimelineEntry from '../model/ChannelTimelineEntry';
import ErrorModel from '../model/ErrorModel';

/**
* AuditOperations service.
* @module api/AuditOperationsApi
* @version 0.0.0
*/
export default class AuditOperationsApi {

    /**
    * Constructs a new AuditOperationsApi. 
    * @alias module:api/AuditOperationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getChannelTimeline operation.
     * @callback module:api/AuditOperationsApi~getChannelTimelineCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ChannelTimelineEntry>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Channel Timeline
     * Returns up to twenty items from the event timeline for a channel, sorted in reverse-chronological order.
     * @param {String} channelId Unique channel identifier
     * @param {Object} opts Optional parameters
     * @param {Number} opts.offset Number of items to skip when calling a paginated API
     * @param {module:api/AuditOperationsApi~getChannelTimelineCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ChannelTimelineEntry>}
     */
    getChannelTimeline(channelId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'channelId' is set
      if (channelId === undefined || channelId === null) {
        throw new Error("Missing the required parameter 'channelId' when calling getChannelTimeline");
      }

      let pathParams = {
        'channel-id': channelId
      };
      let queryParams = {
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['authcode', 'm2m'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/problem+json'];
      let returnType = [ChannelTimelineEntry];
      return this.apiClient.callApi(
        '/v2/channels/{channel-id}/timeline', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
